{"ast":null,"code":"import _slicedToArray from \"/home/server/Escritorio/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/server/Escritorio/frontend/src/componets/commons/header.js\";\nimport React, { componets, useState } from \"react\";\nimport { SINGIN_VALIDATIONS } from \"../commons/auth/validation\";\nimport { useAuth } from \"../commons/auth/auth-context\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Header() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFormOpen = _useState2[0],\n      setIsFormOpen = _useState2[1];\n\n  return React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Inicio \"), React.createElement(\"a\", {\n    href: \"/consultar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Consultar \"), React.createElement(\"a\", {\n    href: \"/registrarse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Registrarse\"), React.createElement(\"a\", {\n    href: \"/contacto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Contacto\"), React.createElement(\"a\", {\n    onClick: function onClick() {\n      return setIsFormOpen(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Log in\"), isFormOpen && React.createElement(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n}\n\nfunction Login() {\n  var _useAuth = useAuth(),\n      signIn = _useAuth.signIn;\n\n  var _useForm = useForm({\n    mode: \"onBlur\" // Lanza validaciones cada vez que hago blur\n\n  }),\n      singin = _useForm.singin,\n      errors = _useForm.errors,\n      formState = _useForm.formState,\n      handleSubmit = _useForm.handleSubmit,\n      setError = _useForm.setError;\n\n  var handleSignIn = function handleSignIn(formData) {\n    return signIn(formData).catch(function (error) {\n      try {\n        if (error.response.status === 409) {\n          setError(\"email\", \"conflict\", \"The email already exists. Please try again\");\n        }\n      } catch (_unused) {\n        console.log(\"Algo a ido mal\");\n      }\n    });\n  };\n\n  return React.createElement(\"span\", {\n    id: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"close\",\n    onClick: function onClick() {\n      return setIsFormOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"X\"), React.createElement(\"form\", {\n    action: \"\",\n    method: \"post\",\n    onSubmit: handleSubmit(handleSignIn),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    ref: singin(SINGIN_VALIDATIONS.email),\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, errors.name && errors.name.message), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Contrase\\xF1a\"), React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    ref: singin(SINGIN_VALIDATIONS.PASSWORD),\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, errors.name && errors.name.message), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Entrar\")))));\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/server/Escritorio/frontend/src/componets/commons/header.js"],"names":["React","componets","useState","SINGIN_VALIDATIONS","useAuth","useForm","Header","isFormOpen","setIsFormOpen","Login","signIn","mode","singin","errors","formState","handleSubmit","setError","handleSignIn","formData","catch","error","response","status","console","log","email","name","message","PASSWORD"],"mappings":"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","sourcesContent":["import React, { componets, useState } from \"react\";\r\nimport { SINGIN_VALIDATIONS } from \"../commons/auth/validation\";\r\nimport { useAuth } from \"../commons/auth/auth-context\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction Header() {\r\n \r\n\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  \r\n  \r\n  return (\r\n    <nav>\r\n      <a href=\"/\">Inicio </a>\r\n      <a href=\"/consultar\">Consultar </a>\r\n      <a href=\"/registrarse\">Registrarse</a>\r\n      <a href=\"/contacto\">Contacto</a>\r\n      <a onClick={() => setIsFormOpen(true)}>Log in</a>\r\n      {isFormOpen && <Login/>}\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction Login() {\r\n\r\n\r\n  const { signIn } = useAuth();\r\n  const { singin, errors, formState, handleSubmit, setError } = useForm({\r\n    mode: \"onBlur\" // Lanza validaciones cada vez que hago blur\r\n  });\r\n\r\n  const handleSignIn = formData => {\r\n    return signIn(formData).catch(error => {\r\n      try{\r\n      if (error.response.status === 409) {\r\n        setError(\r\n          \"email\",\r\n          \"conflict\",\r\n          \"The email already exists. Please try again\"\r\n        );\r\n      }\r\n      }catch{\r\n        console.log(\"Algo a ido mal\")\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n  <span id=\"login\">  \r\n  <div>\r\n    <button className=\"close\" onClick={() => setIsFormOpen(false)}>X</button>\r\n    <form action=\"\" method=\"post\" onSubmit={handleSubmit(handleSignIn)}>\r\n      <fieldset>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input type=\"text\" id=\"email\"\r\n        ref={singin(SINGIN_VALIDATIONS.email)}\r\n         name=\"email\" />\r\n         <span className=\"errorMessage\">\r\n            {errors.name && errors.name.message}\r\n          </span>\r\n        <label htmlFor=\"password\">Contrase√±a</label>\r\n        <input type=\"password\" id=\"password\"\r\n        ref={singin(SINGIN_VALIDATIONS.PASSWORD)}\r\n        name=\"password\" />\r\n        <span className=\"errorMessage\">\r\n            {errors.name && errors.name.message}\r\n          </span>\r\n        <button>\r\n        Entrar\r\n        </button>\r\n      </fieldset>\r\n    </form>\r\n    </div>\r\n  </span>\r\n  );\r\n}\r\n\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}