{"ast":null,"code":"var _jsxFileName = \"/home/server/Escritorio/frontend/src/componets/pages/login.js\";\nimport React, { componets, useState } from \"react\";\nimport { useAuth } from \"../commons/auth/auth-context\";\nimport { useForm } from \"react-hook-form\";\nimport { LOGEARSE_VALIDATIONS } from \"../commons/auth/validation\";\n\nfunction Login(setIsFormOpen) {\n  var _useAuth = useAuth(),\n      signIN = _useAuth.signIN;\n\n  var _useForm = useForm({\n    mode: \"onBlur\" // Lanza validaciones cada vez que hago blur\n\n  }),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      formState = _useForm.formState,\n      handleSubmit = _useForm.handleSubmit,\n      setError = _useForm.setError;\n\n  var handleSignUp = function handleSignUp(formData) {\n    return signIN(formData).catch(function (error) {\n      if (error.response.status === 409) {\n        setError(\"email\", \"conflict\", \"The email already exists. Please try again\");\n      }\n    });\n  };\n\n  return React.createElement(\"span\", {\n    id: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"close\",\n    onClick: function onClick() {\n      return setIsFormOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"X\"), React.createElement(\"form\", {\n    action: \"\",\n    method: \"post\",\n    onSubmit: handleSubmit(handleSignIN),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    ref: register(LOGEARSE_VALIDATIONS.email),\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, errors.name && errors.name.message), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Contrase\\xF1a\"), React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    ref: register(LOGEARSE_VALIDATIONS.PASSWORD),\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, errors.name && errors.name.message), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    disabled: formState.isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Entrar\")))));\n}\n\nexport { Login };","map":{"version":3,"sources":["/home/server/Escritorio/frontend/src/componets/pages/login.js"],"names":["React","componets","useState","useAuth","useForm","LOGEARSE_VALIDATIONS","Login","setIsFormOpen","signIN","mode","register","errors","formState","handleSubmit","setError","handleSignUp","formData","catch","error","response","status","handleSignIN","email","name","message","PASSWORD","isSubmitting"],"mappings":"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","sourcesContent":["import React, { componets, useState } from \"react\";\nimport { useAuth } from \"../commons/auth/auth-context\";\nimport {useForm} from \"react-hook-form\";\nimport { LOGEARSE_VALIDATIONS } from \"../commons/auth/validation\";\n\nfunction Login(setIsFormOpen) {\n    const { signIN } = useAuth();\n    const { register, errors, formState, handleSubmit, setError } = useForm({\n      mode: \"onBlur\" // Lanza validaciones cada vez que hago blur\n    });\n    \n    const handleSignUp = formData => {\n      return signIN(formData).catch(error => {\n            if (error.response.status === 409) {\n              setError(\n                \"email\",\n                \"conflict\",\n                \"The email already exists. Please try again\"\n              );\n            }\n          });\n        };\n    \n    return (\n  <span id=\"login\">  \n  <div>\n  <button className=\"close\" onClick={() => setIsFormOpen(false)}>X</button>\n  <form action=\"\" method=\"post\" onSubmit={handleSubmit(handleSignIN)}>\n    <fieldset>\n      <label htmlFor=\"email\">Email</label>\n      <input type=\"text\" id=\"email\"\n      ref={register(LOGEARSE_VALIDATIONS.email)}\n       name=\"email\" />\n       <span className=\"errorMessage\">\n          {errors.name && errors.name.message}\n        </span>\n      <label htmlFor=\"password\">Contrase√±a</label>\n      <input type=\"password\" id=\"password\"\n      ref={register(LOGEARSE_VALIDATIONS.PASSWORD)}\n      name=\"password\" />\n      <span className=\"errorMessage\">\n          {errors.name && errors.name.message}\n        </span>\n      <button type=\"submit\"\n          className=\"btn\"\n          disabled={formState.isSubmitting}>\n      Entrar</button>\n    </fieldset>\n  </form>\n  </div>\n  </span>\n  );\n  }\n  export {Login}"]},"metadata":{},"sourceType":"module"}