{"ast":null,"code":"import _slicedToArray from \"/home/server/Escritorio/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/server/Escritorio/frontend/src/componets/commons/header.js\";\nimport React, { componets, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { SINGIN_VALIDATIONS } from \"../commons/auth/validation\";\nimport { useAuth } from \"../commons/auth/auth-context\";\n\nfunction Header(useAuth) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFormOpen = _useState2[0],\n      setIsFormOpen = _useState2[1];\n\n  function Login() {\n    var _useAuth = useAuth(),\n        signIn = _useAuth.signIn;\n\n    var _useForm = useForm({\n      mode: \"onBlur\" // Lanza validaciones cada vez que hago blur\n\n    }),\n        singin = _useForm.singin,\n        errors = _useForm.errors,\n        formState = _useForm.formState,\n        handleSubmit = _useForm.handleSubmit,\n        setError = _useForm.setError;\n\n    var handleSignIn = function handleSignIn(formData) {\n      return signIn(formData).catch(function (error) {\n        try {\n          if (error.response.status === 409) {\n            setError(\"email\", \"conflict\", \"The email already exists. Please try again\");\n          }\n        } catch (_unused) {\n          console.log(\"Algo a ido mal\");\n        }\n      });\n    };\n\n    return React.createElement(\"span\", {\n      id: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"close\",\n      onClick: function onClick() {\n        return setIsFormOpen(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"form\", {\n      action: \"\",\n      method: \"post\",\n      onSubmit: handleSubmit(handleSignIn),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"email\",\n      ref: singin(SINGIN_VALIDATIONS.email),\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, errors.name && errors.name.message), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Contrase\\xF1a\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      ref: singin(SINGIN_VALIDATIONS.PASSWORD),\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, errors.name && errors.name.message), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn\",\n      disabled: formState.isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Entrar\")))));\n  }\n\n  return React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Inicio \"), React.createElement(\"a\", {\n    href: \"/consultar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Consultar \"), React.createElement(\"a\", {\n    href: \"/registrarse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Registrarse\"), React.createElement(\"a\", {\n    href: \"/contacto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Contacto\"), React.createElement(\"a\", {\n    onClick: function onClick() {\n      return setIsFormOpen(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Log in\"), isFormOpen && Login());\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/server/Escritorio/frontend/src/componets/commons/header.js"],"names":["React","componets","useState","useForm","SINGIN_VALIDATIONS","useAuth","Header","isFormOpen","setIsFormOpen","Login","signIn","mode","singin","errors","formState","handleSubmit","setError","handleSignIn","formData","catch","error","response","status","console","log","email","name","message","PASSWORD","isSubmitting"],"mappings":"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","sourcesContent":["import React, { componets, useState } from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport { SINGIN_VALIDATIONS } from \"../commons/auth/validation\";\r\nimport { useAuth } from \"../commons/auth/auth-context\";\r\n\r\n\r\nfunction Header(useAuth) {\r\n \r\n\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n\r\n  function Login() {\r\n    const { signIn } = useAuth();\r\n\r\n    const { singin, errors, formState, handleSubmit, setError } = useForm({\r\n      mode: \"onBlur\" // Lanza validaciones cada vez que hago blur\r\n    });\r\n  \r\n    const handleSignIn = formData => {\r\n      return signIn(formData).catch(error => {\r\n        try{\r\n        if (error.response.status === 409) {\r\n          setError(\r\n            \"email\",\r\n            \"conflict\",\r\n            \"The email already exists. Please try again\"\r\n          );\r\n        }\r\n        }catch{\r\n          console.log(\"Algo a ido mal\")\r\n        }\r\n      });\r\n    };\r\n\r\n    return (\r\n    <span id=\"login\">  \r\n    <div>\r\n      <button className=\"close\" onClick={() => setIsFormOpen(false)}>X</button>\r\n      <form action=\"\" method=\"post\" onSubmit={handleSubmit(handleSignIn)}>\r\n        <fieldset>\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input type=\"text\" id=\"email\"\r\n          ref={singin(SINGIN_VALIDATIONS.email)}\r\n           name=\"email\" />\r\n           <span className=\"errorMessage\">\r\n              {errors.name && errors.name.message}\r\n            </span>\r\n          <label htmlFor=\"password\">Contrase√±a</label>\r\n          <input type=\"password\" id=\"password\"\r\n          ref={singin(SINGIN_VALIDATIONS.PASSWORD)}\r\n          name=\"password\" />\r\n          <span className=\"errorMessage\">\r\n              {errors.name && errors.name.message}\r\n            </span>\r\n          <button type=\"submit\"\r\n              className=\"btn\"\r\n              disabled={formState.isSubmitting}>\r\n          Entrar</button>\r\n        </fieldset>\r\n      </form>\r\n      </div>\r\n    </span>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <nav>\r\n      <a href=\"/\">Inicio </a>\r\n      <a href=\"/consultar\">Consultar </a>\r\n      <a href=\"/registrarse\">Registrarse</a>\r\n      <a href=\"/contacto\">Contacto</a>\r\n      <a onClick={() => setIsFormOpen(true)}>Log in</a>\r\n      {isFormOpen && Login()}\r\n    </nav>\r\n  );\r\n}\r\n\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}